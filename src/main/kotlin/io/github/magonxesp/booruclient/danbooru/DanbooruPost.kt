package io.github.magonxesp.booruclient.danbooru

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName

@Serializable
data class DanbooruPost(
	@SerialName("id") val id: Long,
	@SerialName("created_at") val createdAt: String,
	@SerialName("uploader_id") val uploaderId: Long,
	@SerialName("score") val score: Int,
	@SerialName("source") val source: String,
	@SerialName("md5") val md5: String,
	@SerialName("last_comment_bumped_at") val lastCommentBumpedAt: String?,
	@SerialName("rating") val rating: String,
	@SerialName("image_width") val imageWidth: Int,
	@SerialName("image_height") val imageHeight: Int,
	@SerialName("tag_string") val tagString: String,
	@SerialName("fav_count") val favCount: Int,
	@SerialName("file_ext") val fileExt: String,
	@SerialName("last_noted_at") val lastNotedAt: String?,
	@SerialName("parent_id") val parentId: Long?,
	@SerialName("has_children") val hasChildren: Boolean,
	@SerialName("approver_id") val approverId: Long?,
	@SerialName("tag_count_general") val tagCountGeneral: Int,
	@SerialName("tag_count_artist") val tagCountArtist: Int,
	@SerialName("tag_count_character") val tagCountCharacter: Int,
	@SerialName("tag_count_copyright") val tagCountCopyright: Int,
	@SerialName("file_size") val fileSize: Long,
	@SerialName("up_score") val upScore: Int,
	@SerialName("down_score") val downScore: Int,
	@SerialName("is_pending") val isPending: Boolean,
	@SerialName("is_flagged") val isFlagged: Boolean,
	@SerialName("is_deleted") val isDeleted: Boolean,
	@SerialName("tag_count") val tagCount: Int,
	@SerialName("updated_at") val updatedAt: String,
	@SerialName("is_banned") val isBanned: Boolean,
	@SerialName("pixiv_id") val pixivId: Long?,
	@SerialName("last_commented_at") val lastCommentedAt: String?,
	@SerialName("has_active_children") val hasActiveChildren: Boolean,
	@SerialName("bit_flags") val bitFlags: Int,
	@SerialName("tag_count_meta") val tagCountMeta: Int,
	@SerialName("has_large") val hasLarge: Boolean,
	@SerialName("has_visible_children") val hasVisibleChildren: Boolean,
	@SerialName("media_asset") val mediaAsset: MediaAsset,
	@SerialName("tag_string_general") val tagStringGeneral: String,
	@SerialName("tag_string_character") val tagStringCharacter: String,
	@SerialName("tag_string_copyright") val tagStringCopyright: String,
	@SerialName("tag_string_artist") val tagStringArtist: String,
	@SerialName("tag_string_meta") val tagStringMeta: String,
	@SerialName("file_url") val fileUrl: String,
	@SerialName("large_file_url") val largeFileUrl: String,
	@SerialName("preview_file_url") val previewFileUrl: String
)
